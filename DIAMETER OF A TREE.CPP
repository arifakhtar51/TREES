/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
int solve(TreeNode* root){
     if(root==NULL)
            return 0;
            
       
        
        int l=solve(root->left);
       
        int r=solve(root->right);
        int ans= max(l,r)+1;
        return ans;
}
    int diameterOfBinaryTree(TreeNode* root) {
        if(root==NULL)
        return 0;
         int l=diameterOfBinaryTree(root->left);
         int r=diameterOfBinaryTree(root->right);
        int lr=solve(root->left)+solve(root->right);
        int ans=max(l,max(r,lr));
         return ans;
    }
};
